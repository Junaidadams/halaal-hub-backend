datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  USER
  ADMIN
  BUSINESS
}

enum ListingStatus {
  PENDING
  APPROVED
  REJECTED
}

model User {
  id                       Int                        @id @default(autoincrement())
  username                 String                     @unique
  password                 String
  email                    String                     @unique
  avatarUrl                String?
  bio                      String?
  role                     UserRole                   @default(USER) 
  location                 Boolean?                   @default(false)
  createdAt                DateTime                   @default(now())
  verified                 Boolean                    @default(false)

  certificationPreferences CertificationPreference[]
  savedListings            SavedListing[]
  favouritedListings       FavouritedListing[]
  listings                 Listing[]                 
}

model Listing {
  id              Int                   @id @default(autoincrement())
  name            String
  description     String?
  detailedDescription String?
  lat             Float
  lng             Float
  address         String
  googlePlaceLink String?
  imageUrl        String?
  category        String
  certifiedBy     String?
  isCertified     Boolean               @default(false)
  stars           Int                   @default(0)
  phone           String?
  email           String?
  website         String?
  status          ListingStatus         @default(PENDING)
  createdAt       DateTime              @default(now())

  owner           User?                  @relation(fields: [ownerId], references: [id]) // ðŸ‘ˆ Business owner
  ownerId         Int?

  savedByUsers    SavedListing[]
  favouritedByUsers FavouritedListing[]
}


model SavedListing {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  listing   Listing @relation(fields: [listingId], references: [id])
  listingId Int

  @@unique([userId, listingId])
}

model FavouritedListing {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  listing   Listing @relation(fields: [listingId], references: [id])
  listingId Int

  @@unique([userId, listingId])
}

model CertificationPreference {
  id     Int    @id @default(autoincrement())
  name   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}
